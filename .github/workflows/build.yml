name: build
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: make build-docker
  # deploy:
  #   name: Deploy to AWS
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       role-to-assume: arn:aws:iam::408204130528:role/tchr_voice_github_role
  #       aws-region: us-east-2
  #   - name: Login to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v1
  #   - name: Build, tag, and push db-init image to Amazon ECR
  #     id: build-image
  #     env:
  #       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #       ECR_REPOSITORY: tchr-voice-db-init
  #       DOCKER_FILE: Dockerfile.db-init
  #       IMAGE_TAG: ${{ github.sha }}
  #     run: |
  #       docker build -f $DOCKER_FILE -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  #       echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  #   - name: Env substitution
  #     id: env-substitution
  #     env:
  #       INPUT: task-definition-db-init.template.json
  #       OUTPUT: task-definition.json
  #       AWS_ACCOUNT_ID: 408204130528
  #       IMAGE_TAG: ${{ github.sha }}
  #     run: |
  #       envsubst < $INPUT > $OUTPUT
  #   - name: Deploy to Amazon ECS
  #     uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #     with:
  #       task-definition: task-definition.json
  #       wait-for-service-stability: true
